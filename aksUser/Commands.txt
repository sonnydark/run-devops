https://developercommunity.visualstudio.com/t/New-Kubernetes-service-connection-causes/10138123

Connect to the kubernetes cluster and create a service account in the namespace. Here a service account “admin-serviceaccount” is created in namespace “default”

kubectl apply -f -<<EOF
apiVersion: v1
kind: ServiceAccount
metadata:
   name: admin-serviceaccount
   namespace: default  
EOF
  
  
image.png

Create Role or ClusterRole and Rolebinding for this service account based on your requirement. See Using RBAC Authorization for details.
For example:
Create custom role:

kubectl apply -f -<<EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-for-serviceaccount
  namespace: default
rules:
- apiGroups: ["*","apps","extensions"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
EOF
  
  
Rolebinding for the service account:

kubectl apply -f -<<EOF
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-for-serviceaccount
  namespace: default
subjects:
- kind: ServiceAccount
  name: admin-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: role-for-serviceaccount
  apiGroup: rbac.authorization.k8s.io
EOF
  
  
Create Secrets manually and assign these to a ServiceAccount:
kubectl apply -f -<<EOF
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: sa-secret
  annotations:
      kubernetes.io/service-account.name: "admin-serviceaccount"
EOF     
  
  
Get the secret by running the following command.
kubectl get secret admin-serviceaccount -n default -o json
kubectl get secret sa-secret -n default -o json

Get kubernetes server URL
kubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}'

Create the Kubernetes service connection using the Service account method. Enter the correct values and the Secret output from above step (step4) - > Save.
image.png



https://myaksclust-myresourcegroup-3e1cc3-8eqrhy3i.hcp.westeurope.azmk8s.io:443

{
    "apiVersion": "v1",
    "data": {
        "ca.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRWURwTENTaFpiSjU2WHY0aVFTa1lRakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TXpBek1qZ3dPREk1TXpaYUdBOHlNRFV6TURNeU9EQTRNemt6TmxvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURLCjJQRDJEUlJXMEoyaXdlVnI3VVczZE1qNVFtaDN3QjlmRXdrU0hKRU5VRVJnK1plWEN6Z0JaeFFaVmduTjM0ckIKcE5FZEVQeGx0eWI1c1dwRWxYbUlmL3lYS0djVUlsRnNwRFVzcXRNOXFDbzY5M1RZek40aTJxVE1SRFFTNVpaTApEb0pXVGV6RFNXdGtjbDZpcWEwWmZ4aWFDWm1RRVFQelljcGNuZ0QrWk5aYWl4R2p0djNuVlZBM2RNMDkvL1BTClk1aWJSd1djU0hiTnYxQWVyY1pqekZiR2FHM0ZwaC95V1ZHYUhvVUV3OEEvaUtMNUc4dmQxdW1Ea2dtMkUyY0cKK3hVVGxTVFlvWEhUWER5RWxEMVB6R01kcGNOSUJobHFJdnZ3ckZPbUt4dGhaVnZIak5wMkVYZzNucVFIZGFtWAp4UkZJZXhhOVEzL1VDUXNvSWU4ZkMxK0xVV1k4aU1ueTgzOU9PUHhoSGUvazJRZW8ydW4xaTRMRmpMWEU3U0F0Cmp3TzI4T1hxR25tMXBxNTZDYU01WS9rc1dCbGtCSVpNQVhZczlEVXNIOFREa3hoZ0RLeDZBVDJCZHF5aEhMdFUKQjBxMmNVSGZXbnRwUEhzNGJtUmllL0pSdDhvZ3l5aDhyTG1aWEc0MlR0VXdYczRaNS9teTM5VG0rQUZuVHVaVwpmZjgyMkdsYmRtandRYmVTY1lSMXVvUkNieCt0cmE3VkZWeW9mdkVlTEhTdnM0TzBXd0FxbUF0RmZSeXdJNkg2CktXT3ViNHk1N2xZTlRoaDJXYU16YTJhVVVjMXBnTjdNdUNjNkdvWXdOSTExZ2NqZis4OTRpM3ZJMERydzRjNnMKZnJkUGU3a2RIcC9iRWVtbVV1cCsrZGZROVZROTFIWnhnT1ZxVkNGQmN3SURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVZQWNJcjloVVhTdU9uNEFjCjIzNmhobytJdjFRd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFFNSt2Rk1xbTZKWGJTL0ZVWXZrM0Zqc2xkYW0KNjBkOGV1SkEzc0h3TVRLVEEva3FPMkhKbGxsTkZLVXNVWXYxaFYrZEF2WHVTVXBWQytoN09zY0lyNXRmN2xhQwppMkUrK2xaOHpxanBraSt4REYyTnZ5RTFBdTBCclV5NHFsczhkSGVZQzhiM25lRlpqcFpTL2RnaTg5NVB4TUtuCkRKODV0czBEemRZdE9sckd3VDFoRkgrUHhFRmNjZXJ6RGtSSC9ET1lVSWovWGdzTHVhd3JkRDBKVWVreGlNZzcKbWszVkpDN2lCOUpRSG1lY1ZpWDdGdmQ5aCtLelhFeXNHcDdiOUJwRnhPT3FBVDA3SHpJZE1md3FLY01lS0NuWgpoTjNZMFJLaWxzaGQ5QWVPT0VUa1RPY3VXUllGK3VoRFVPWVJDZzBKOE9ENHlUK3ZXVEZuOS9PK0tYVDNLM21MCnV0aDB6NnMwbWZicnRYaVRFaVk4T3AwR044WXNlUTBQaDYzcktRRDNWbE9HWXZRZGMzRVJJWnhDTlFNaDhuWmkKSFV4QzRZcm1qZzh1Q0ExdER5YXU2YkxhNGlnRTdVS1hHanNqRXNpdjlYeXk1QUVJOHFMM2VpWktMaEI1MmQwSgp1Mk5JY2pTdkMzYUdmYVI4NEVpZGpaMFFoT3ZTV2J1WmxoM0J3N1ZSZWZWdlZ2ZXdjTUtoQVdPZWJ2ckVVMU4xCldJY1hxSDF4SGgrWkhJQ0VFamlQenQ4VG5qdFlZR2ZadVltcktsUEljRjBtbDlXeFBxcGViTER6ME1hUVRWc3cKVHZoazRMUmZ4MVZBUmRUamRFT2N0bTF5aDJaQUJHNk5vSFUzL3hUVE9Hd204c0VjUzhoemNzNUVBS2QzWTIxbwphaTFXZVBySXZZR2FoakJxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "namespace": "ZGVmYXVsdA==",
        "token": "ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklsYzBPVXBKWlVRMGVrRjBhMnh3Vm5SRk1XcHBNVUpIYmpSNVdYbHFZamxtUWpGalRESm9aVXR1U25NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUprWldaaGRXeDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpXTnlaWFF1Ym1GdFpTSTZJbk5oTFhObFkzSmxkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUpoWkcxcGJpMXpaWEoyYVdObFlXTmpiM1Z1ZENJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1NeE16QTBNbVJtTFdaallqY3RORGRoTXkwNFlXWTJMVFUxWVdJMFpqTXlNbVZoWlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREcGtaV1poZFd4ME9tRmtiV2x1TFhObGNuWnBZMlZoWTJOdmRXNTBJbjAuRzIyVDVoa1Zva09pdnVOY3F1QUhrUnEtTE1NVkZ5UFhseVEwQU1hWnBfUnFGVDhxQ2lYZlBJM09wNnBldFNCTWVYN0JsX0hQdE1fU1dET1pLRmF0SVVjblpfTVFzTW9KUkJtLVBZdEZiNTZxaVhhaGY4OF9QcVF1emFmd01nUlF5VmVOZFhQT29hQTBoTEt6eWRMMmJtRHBYNXNBaWROZElCSEdpZEl4bW84dGRZeGhZdmhZZzhRZ3RhZ1pUTTN2c21qWkFmUnF4VFRIWE5BM3FJRUhNRGNUVUxyMjBXdXB4dTF5OGFxNFZfTFhVcEFqajMxMEh3QTlOek5wOXBuQ1FRUzRoUUVxQTV4VUNlZHBITlBWTGRaLTMwWHEybkFqWWVWaHFsWXp6YmtYLW5lTVdxOTV3emJDT1JYOS1WMV8zNHRFLTNyRUdpbG5UejlzcXFoTFVDVVFNS2VTb09TV19MeFhJMV9LajI2cm5hLVdXUERnd240Y0dtRUlzWk53ZmVYZXh5YkpmeEpZZTd4ZEN6QWhyNUkzVGthRnVLNENsdVliZjVFTVRhTi04amRpVlZGOXJpOWxPYnF4WGs1U1FUcHFGUlo0TXZLNlcyZTNhOUtXTkxGdjQ3X2NZVzlTcGNZc2JaRlNvc3pMblRKRy1JYzBTc3VhcFFqaFc4c1dXYi16NEx6Z3habGZPX1lmWVJ6MDJucFNJcXpZYmk0T1N3ajBHYXE0QzlZaE9zUU5wM1lOVUF2SzF6OXRQbEFvdmdKRHhrdm1CV2dQLWRZdXZ2S0xjaUlqelRNbmdlSHE1dzFldUtZVUtWZ3NmMXEtNjVuY085LW0tT2tWWUYtQW45TWdyQnJXZkxCVnhjWDJXdi1maHk3c01kVjdBSDZrWHdvTGI2d3BXREk="
    },
    "kind": "Secret",
    "metadata": {
        "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Secret\",\"metadata\":{\"annotations\":{\"kubernetes.io/service-account.name\":\"admin-serviceaccount\"},\"name\":\"sa-secret\",\"namespace\":\"default\"},\"type\":\"kubernetes.io/service-account-token\"}\n",
            "kubernetes.io/service-account.name": "admin-serviceaccount",
            "kubernetes.io/service-account.uid": "c13042df-fcb7-47a3-8af6-55ab4f322eae"
        },
        "creationTimestamp": "2023-03-29T12:04:36Z",
        "name": "sa-secret",
        "namespace": "default",
        "resourceVersion": "356078",
        "uid": "305aca5d-44ae-4078-943f-8ff8dd563f5f"
    },
    "type": "kubernetes.io/service-account-token"
}