# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
    branches:
      include:
      - main
    paths:
      include:
      - pipelines/install-pipeline.yaml

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7d15e4bd-b3d8-481e-8ac9-fdd5069a2e48'
  kubernetesServiceConnection: 'cb689e8b-9a00-465f-9fed-399f745f74c3'
  imageRepository: 'shoppingapi'
  containerRegistry: 'shoppingacr69.azurecr.io'
  dockerfilePath: 'Shopping/Shopping.API/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acr-secret'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/Shopping
        tags: |
          $(tag)
          
    - upload: helm
      artifact: helm

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'sonnydarkrundevops'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            displayName: Helm install
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              command: 'install'
              chartType: 'FilePath'
              chartPath: $(Pipeline.Workspace)/helm/deploychart
              releaseName: 'ShoppingAppRelease'